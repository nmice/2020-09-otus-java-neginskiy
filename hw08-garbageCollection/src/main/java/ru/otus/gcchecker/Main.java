package ru.otus.gcchecker;

/**
 * Neginskiy M.B. 18.01.2021
 * <p>
 * ДОМАШНЕЕ ЗАДАНИЕ
 * Сравнение разных сборщиков мусора
 * Цель: на примере простого приложения понять какое влияние оказывают сборщики мусора
 * Написать приложение, которое следит за сборками мусора и пишет в лог количество сборок каждого типа
 * (young, old) и время которое ушло на сборки в минуту.
 * <p>
 * Добиться OutOfMemory в этом приложении через медленное подтекание по памяти
 * (например добавлять элементы в List и удалять только половину).
 * <p>
 * <p>
 * Настроить приложение (можно добавлять Thread.sleep(...)) так чтобы оно падало
 * с OOM примерно через 5 минут после начала работы.
 * <p>
 * Собрать статистику (количество сборок, время на сборки) по разным GC.
 * <p>
 * !!! Сделать выводы !!!
 * ЭТО САМАЯ ВАЖНАЯ ЧАСТЬ РАБОТЫ:
 * Какой gc лучше и почему?
 * <p>
 * Выводы оформить в файле Сonclusions.md в корне папки проекта.
 * Результаты измерений сведите в таблицу.
 * <p>
 * Попробуйте провести этот эксперимент на небольшом хипе порядка 256Мб, и на максимально возможном, который у вас может быть.
 */
public class Main {
    public static void main(String[] args) {
        System.out.println("***LETS GO***");
    }
}
